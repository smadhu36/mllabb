import pandas as pd
from sklearn.metrics import accuracy_score, precision_score, recall_score
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import Pipeline
df = pd.read_csv('/content/spam (2).csv')


df['spam'] = df['Category'].apply(lambda x: 1 if x == 'spam' else 0)

X_train, X_test, y_train, y_test = train_test_split(df.Message,df.spam)

v = CountVectorizer()
X_train_count = v.fit_transform(X_train)

model = MultinomialNB()
model.fit(X_train_count, y_train)

emails = [
    "Hey sai, can we get together to watch the sunset tomorrow?",
    "Upto 50% discount on the shoes, exclusive offer just for you. Don't miss this offer"
]
emails_count = v.transform(emails)
predictions = model.predict(emails_count)
print(f"Predictions for test emails: {predictions}")

X_test_count = v.transform(X_test)
accuracy = model.score(X_test_count, y_test)
print(f"Accuracy: {accuracy:.2f}")

clf = Pipeline([
    ('vectorizer', CountVectorizer()),
    ('nb', MultinomialNB())
])
clf.fit(X_train, y_train)
y_pred = clf.predict(X_test)

precision = precision_score(y_test, y_pred, average='weighted')
recall = recall_score(y_test, y_pred, average='weighted')
print(f"Precision: {precision:.2f}")
print(f"Recall: {recall:.2f}")


